// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kjuFFTSZb8fanzCHT2C1jz
// Component: 0dGBHkGVkF
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import CommonLandingPage2 from "../../CommonLandingPage2"; // plasmic-import: vfJVtA9eRVA/component
import ValuePropListItem from "../../ValuePropListItem"; // plasmic-import: lJppbKgSOw/component
import GraphicIcon from "../../GraphicIcon"; // plasmic-import: TcXkT68Mp6/component
import Divider from "../../Divider"; // plasmic-import: SQHouqji3_/component
import SmallValuePropCard from "../../SmallValuePropCard"; // plasmic-import: ZsmzGgkZw2/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: k7xdGnvUtPZ_s/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_plasmic_kit_website_components.module.css"; // plasmic-import: kjuFFTSZb8fanzCHT2C1jz/projectcss
import * as sty from "./PlasmicEcommerce.module.css"; // plasmic-import: 0dGBHkGVkF/css

import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: mrC2Ljeqti/icon
import Icon20Icon from "./icons/PlasmicIcon__Icon20"; // plasmic-import: YhhYiXTtXT/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: 5amV9exkN9/icon
import Icon27Icon from "./icons/PlasmicIcon__Icon27"; // plasmic-import: E2O_OGnBZf/icon
import image87Q5HyGrQzo from "./images/image87.png"; // plasmic-import: q5HyGrQzo/picture
import image819KjKXf8AA from "./images/image81.png"; // plasmic-import: 9KjKXf8aA/picture
import image83G6DF9FdL from "./images/image83.png"; // plasmic-import: _G6dF9FdL/picture
import image78QZwEvhzU2 from "./images/image78.png"; // plasmic-import: QZwEvhzU2/picture
import image82LYItEpXgS from "./images/image82.png"; // plasmic-import: lYItEpXgS/picture
import image84FyKjl3Owe from "./images/image84.png"; // plasmic-import: fyKJL3owe/picture
import image86ZvTNx6QJy from "./images/image86.png"; // plasmic-import: zvTNx6qJy/picture
import image85KCxujGJaO from "./images/image85.png"; // plasmic-import: KCxujGJaO/picture
import ecommerceHeroImagepng2Uvdbpwnkv from "./images/ecommerceHeroImagepng2.png"; // plasmic-import: UVDBPWNKV/picture
import imageJEb6FwUqh2 from "./images/image.svg"; // plasmic-import: jEB6FWUqh2/picture
import image3Ye53PEpLv from "./images/image3.svg"; // plasmic-import: YE53p_epLv/picture
import image4SuzPkCmZfz from "./images/image4.svg"; // plasmic-import: SuzPKCmZFZ/picture
import image8Pjopgnvz6 from "./images/image8.svg"; // plasmic-import: PJOPGNVZ-6/picture
import image53LFnfKPfDu from "./images/image53.png"; // plasmic-import: LFnfKPfDu/picture
import image904Yo870MHj from "./images/image9.svg"; // plasmic-import: 04YO870mHJ/picture
import image11C1Emdq7MU7 from "./images/image11.svg"; // plasmic-import: C1Emdq7mU7/picture
import image12WiXt2Gdxg from "./images/image12.png"; // plasmic-import: WiXT2gdxg/picture
import image75WTvOxGb6B from "./images/image75.png"; // plasmic-import: WTvOXGb6b/picture
import image748T6TyW2Sn from "./images/image74.png"; // plasmic-import: 8t6tyW2SN/picture
import image76K6RrS2DFz from "./images/image76.png"; // plasmic-import: K6rrS2dFZ/picture
import image77XlZeK5Zq from "./images/image77.png"; // plasmic-import: Xl_ZeK5Zq/picture

export type PlasmicEcommerce__VariantMembers = {};

export type PlasmicEcommerce__VariantsArgs = {};
type VariantPropType = keyof PlasmicEcommerce__VariantsArgs;
export const PlasmicEcommerce__VariantProps = new Array<VariantPropType>();

export type PlasmicEcommerce__ArgsType = {};
type ArgPropType = keyof PlasmicEcommerce__ArgsType;
export const PlasmicEcommerce__ArgProps = new Array<ArgPropType>();

export type PlasmicEcommerce__OverridesType = {
  root?: p.Flex<"div">;
  commonLandingPage2?: p.Flex<typeof CommonLandingPage2>;
  valueA13?: p.Flex<typeof SmallValuePropCard>;
  valueA23?: p.Flex<typeof SmallValuePropCard>;
  valueA22223?: p.Flex<typeof SmallValuePropCard>;
  valueA222?: p.Flex<typeof SmallValuePropCard>;
  valueA222222?: p.Flex<typeof SmallValuePropCard>;
  valueA122?: p.Flex<typeof SmallValuePropCard>;
  valueA2322?: p.Flex<typeof SmallValuePropCard>;
  valueA22322?: p.Flex<typeof SmallValuePropCard>;
};

export interface DefaultEcommerceProps {
  className?: string;
}

function PlasmicEcommerce__RenderFunc(props: {
  variants: PlasmicEcommerce__VariantsArgs;
  args: PlasmicEcommerce__ArgsType;
  overrides: PlasmicEcommerce__OverridesType;
  dataFetches?: PlasmicEcommerce__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      {}
      {}

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <CommonLandingPage2
            data-plasmic-name={"commonLandingPage2"}
            data-plasmic-override={overrides.commonLandingPage2}
            className={classNames("__wab_instance", sty.commonLandingPage2)}
            slot={
              <span>
                <React.Fragment>
                  {"Build engaging digital experiences ⚡️ "}
                </React.Fragment>
                <span style={{ fontStyle: "italic" }}>{"fast"}</span>
                <React.Fragment>{"."}</React.Fragment>
              </span>
            }
            slot2={
              "The visual page builder and CMS that works seamlessly with your ecommerce tech stack."
            }
            slot3={
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__txSpP)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__pc6Bm)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA13"}
                    data-plasmic-override={overrides.valueA13}
                    actionButton={null}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr" as const}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__twpLx)}
                        height={300 as const}
                        loading={"lazy" as const}
                        role={"img"}
                        src={image87Q5HyGrQzo}
                        width={590 as const}
                      />
                    }
                  >
                    {"Landing pages"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA23"}
                    data-plasmic-override={overrides.valueA23}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA23)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr" as const}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__cACdO)}
                        height={683 as const}
                        loading={"lazy" as const}
                        role={"img"}
                        src={image819KjKXf8AA}
                        width={1018 as const}
                      />
                    }
                  >
                    {"Headless storefronts"}
                  </SmallValuePropCard>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__l1X8K)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA22223"}
                    data-plasmic-override={overrides.valueA22223}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA22223)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr" as const}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img___3E58O)}
                        height={298 as const}
                        role={"img"}
                        src={image83G6DF9FdL}
                        width={554 as const}
                      />
                    }
                  >
                    {"Cart upsells"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA222"}
                    data-plasmic-override={overrides.valueA222}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA222)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr" as const}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__wJvOh)}
                        height={250 as const}
                        role={"img"}
                        src={image78QZwEvhzU2}
                        width={452 as const}
                      />
                    }
                  >
                    {"Offer overlays"}
                  </SmallValuePropCard>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__bna29)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA222222"}
                    data-plasmic-override={overrides.valueA222222}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA222222)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr" as const}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__oAebb)}
                        height={204 as const}
                        loading={"lazy" as const}
                        role={"img"}
                        src={image82LYItEpXgS}
                        width={435 as const}
                      />
                    }
                  >
                    {"Announcement bars"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA122"}
                    data-plasmic-override={overrides.valueA122}
                    actionButton={null}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr" as const}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__mlj0O)}
                        height={334 as const}
                        loading={"lazy" as const}
                        role={"img"}
                        src={image84FyKjl3Owe}
                        width={557 as const}
                      />
                    }
                  >
                    {"Product detail pages"}
                  </SmallValuePropCard>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__deeKy)}
                >
                  <SmallValuePropCard
                    data-plasmic-name={"valueA2322"}
                    data-plasmic-override={overrides.valueA2322}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA2322)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr" as const}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__tjCbf)}
                        height={164 as const}
                        loading={"lazy" as const}
                        role={"img"}
                        src={image86ZvTNx6QJy}
                        width={432 as const}
                      />
                    }
                  >
                    {"Heroes"}
                  </SmallValuePropCard>

                  <SmallValuePropCard
                    data-plasmic-name={"valueA22322"}
                    data-plasmic-override={overrides.valueA22322}
                    actionButton={null}
                    className={classNames("__wab_instance", sty.valueA22322)}
                    description={null}
                    followupLink={null}
                    icon={null}
                    ltr={"ltr" as const}
                    showcaseImage={
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__acZpl)}
                        height={226 as const}
                        loading={"lazy" as const}
                        role={"img"}
                        src={image85KCxujGJaO}
                        width={596 as const}
                      />
                    }
                  >
                    {"Promotional sections"}
                  </SmallValuePropCard>
                </p.Stack>
              </p.Stack>
            }
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "commonLandingPage2",
    "valueA13",
    "valueA23",
    "valueA22223",
    "valueA222",
    "valueA222222",
    "valueA122",
    "valueA2322",
    "valueA22322"
  ],
  commonLandingPage2: [
    "commonLandingPage2",
    "valueA13",
    "valueA23",
    "valueA22223",
    "valueA222",
    "valueA222222",
    "valueA122",
    "valueA2322",
    "valueA22322"
  ],
  valueA13: ["valueA13"],
  valueA23: ["valueA23"],
  valueA22223: ["valueA22223"],
  valueA222: ["valueA222"],
  valueA222222: ["valueA222222"],
  valueA122: ["valueA122"],
  valueA2322: ["valueA2322"],
  valueA22322: ["valueA22322"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  commonLandingPage2: typeof CommonLandingPage2;
  valueA13: typeof SmallValuePropCard;
  valueA23: typeof SmallValuePropCard;
  valueA22223: typeof SmallValuePropCard;
  valueA222: typeof SmallValuePropCard;
  valueA222222: typeof SmallValuePropCard;
  valueA122: typeof SmallValuePropCard;
  valueA2322: typeof SmallValuePropCard;
  valueA22322: typeof SmallValuePropCard;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicEcommerce__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicEcommerce__VariantsArgs;
    args?: PlasmicEcommerce__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicEcommerce__Fetches;
  } & Omit<PlasmicEcommerce__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicEcommerce__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicEcommerce__ArgProps,
      internalVariantPropNames: PlasmicEcommerce__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicEcommerce__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicEcommerce";
  } else {
    func.displayName = `PlasmicEcommerce.${nodeName}`;
  }
  return func;
}

export const PlasmicEcommerce = Object.assign(
  // Top-level PlasmicEcommerce renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    commonLandingPage2: makeNodeComponent("commonLandingPage2"),
    valueA13: makeNodeComponent("valueA13"),
    valueA23: makeNodeComponent("valueA23"),
    valueA22223: makeNodeComponent("valueA22223"),
    valueA222: makeNodeComponent("valueA222"),
    valueA222222: makeNodeComponent("valueA222222"),
    valueA122: makeNodeComponent("valueA122"),
    valueA2322: makeNodeComponent("valueA2322"),
    valueA22322: makeNodeComponent("valueA22322"),

    // Metadata about props expected for PlasmicEcommerce
    internalVariantProps: PlasmicEcommerce__VariantProps,
    internalArgProps: PlasmicEcommerce__ArgProps
  }
);

export default PlasmicEcommerce;
/* prettier-ignore-end */
