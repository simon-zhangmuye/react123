// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: kjuFFTSZb8fanzCHT2C1jz
// Component: 6kW5oz8gIK-
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: vtgKf8zu4R/component
import PageHero from "../../PageHero"; // plasmic-import: MaAtk98o9f/component
import GraphicIcon from "../../GraphicIcon"; // plasmic-import: TcXkT68Mp6/component
import ValuePropCardsSection from "../../ValuePropCardsSection"; // plasmic-import: 3Qfldk4cSlr/component
import SmallValuePropCard from "../../SmallValuePropCard"; // plasmic-import: ZsmzGgkZw2/component
import ButtonLink from "../../ButtonLink"; // plasmic-import: jzdXOPDUzV/component
import Linky from "../../Linky"; // plasmic-import: EDH0JqEGKc/component
import ValuePropsListSection from "../../ValuePropsListSection"; // plasmic-import: 2xJBbfTP-H7/component
import ValuePropListItem from "../../ValuePropListItem"; // plasmic-import: lJppbKgSOw/component
import Divider from "../../Divider"; // plasmic-import: SQHouqji3_/component
import ValuePropSection from "../../ValuePropSection"; // plasmic-import: 6Zq5_xjO9F/component
import Footer from "../../Footer"; // plasmic-import: 9R5YynM9KVp/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_plasmic_kit_website_components.module.css"; // plasmic-import: kjuFFTSZb8fanzCHT2C1jz/projectcss
import * as sty from "./PlasmicPageDesignSystems.module.css"; // plasmic-import: 6kW5oz8gIK-/css

import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: dU5ansm0Xg/icon
import Icon17Icon from "./icons/PlasmicIcon__Icon17"; // plasmic-import: oElPELm1et/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: wTfucAc7Rr/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: 7p8MViVJAB/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: OsdZlmfSEe/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: qrdgDrcfzD/icon
import Icon19Icon from "./icons/PlasmicIcon__Icon19"; // plasmic-import: ymoKOCfuo-/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: CyAK3Gjxwu/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: 4WWM9dCuzI/icon
import image16EjT54Ab5 from "./images/image16.png"; // plasmic-import: ejT54-AB5/picture
import carbonpngQ8DsR1Ya3 from "./images/carbonpng.png"; // plasmic-import: Q8dsR1Ya3/picture
import image6Zk4QpLvJs from "./images/image6.svg"; // plasmic-import: ZK4QPLv_Js/picture
import image7RU1GD3ENw from "./images/image7.svg"; // plasmic-import: rU1g-d3eNw/picture
import image2XOaQbmepj8 from "./images/image2.svg"; // plasmic-import: xOaQbmepj8/picture

export type PlasmicPageDesignSystems__VariantMembers = {};

export type PlasmicPageDesignSystems__VariantsArgs = {};
type VariantPropType = keyof PlasmicPageDesignSystems__VariantsArgs;
export const PlasmicPageDesignSystems__VariantProps =
  new Array<VariantPropType>();

export type PlasmicPageDesignSystems__ArgsType = {};
type ArgPropType = keyof PlasmicPageDesignSystems__ArgsType;
export const PlasmicPageDesignSystems__ArgProps = new Array<ArgPropType>();

export type PlasmicPageDesignSystems__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  pageHero?: p.Flex<typeof PageHero>;
  valuePropsListSection?: p.Flex<typeof ValuePropsListSection>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultPageDesignSystemsProps {
  className?: string;
}

function PlasmicPageDesignSystems__RenderFunc(props: {
  variants: PlasmicPageDesignSystems__VariantsArgs;
  args: PlasmicPageDesignSystems__ArgsType;
  overrides: PlasmicPageDesignSystems__OverridesType;
  dataFetches?: PlasmicPageDesignSystems__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <Header
        data-plasmic-name={"header"}
        data-plasmic-override={overrides.header}
        className={classNames("__wab_instance", sty.header)}
      />

      <PageHero
        data-plasmic-name={"pageHero"}
        data-plasmic-override={overrides.pageHero}
        className={classNames("__wab_instance", sty.pageHero)}
        slot={
          "Single source of truth for your design system, from conception to production."
        }
        slot2={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__omcFa)}
            colors={"cyan" as const}
          >
            <Icon14Icon
              className={classNames(defaultcss.all, sty.svg__cMnKu)}
              role={"img"}
            />
          </GraphicIcon>
        }
      >
        <div
          className={classNames(
            defaultcss.all,
            defaultcss.__wab_text,
            sty.box__a1XxH
          )}
        >
          {"design systems"}
        </div>
      </PageHero>

      <ValuePropCardsSection
        className={classNames(
          "__wab_instance",
          sty.valuePropCardsSection__tqkWc
        )}
        slot={"No-compromise developer flexibility."}
      >
        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__d7Ww1
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__eGYgT)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box___6DOwq
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__ezbPy)}
              colors={"coral" as const}
            >
              <Icon17Icon
                className={classNames(defaultcss.all, sty.svg__xbjqi)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard___8Dgjp
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__kzFp6)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__ofkAe
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon___459T)}
              colors={"green" as const}
            >
              <Icon6Icon
                className={classNames(defaultcss.all, sty.svg__dmuDw)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__rdshW
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__imFlI)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__fXvw9
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon___2Ulsi)}
              colors={"yellow" as const}
            >
              <Icon15Icon
                className={classNames(defaultcss.all, sty.svg___7VuFl)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />
      </ValuePropCardsSection>

      <ValuePropsListSection
        data-plasmic-name={"valuePropsListSection"}
        data-plasmic-override={overrides.valuePropsListSection}
        className={classNames("__wab_instance", sty.valuePropsListSection)}
      />

      <ValuePropCardsSection
        className={classNames(
          "__wab_instance",
          sty.valuePropCardsSection__eiZqf
        )}
        slot={"Limitless expressivity."}
      >
        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__t2Pdt
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__eLxX)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__sdtLe
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__y5Wvw)}
              colors={"teal" as const}
            >
              <Icon17Icon
                className={classNames(defaultcss.all, sty.svg__wlrws)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__fAuq5
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__moCy7)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box___3Mwl5
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__jt5FT)}
              colors={"green" as const}
            >
              <Icon6Icon
                className={classNames(defaultcss.all, sty.svg___9M0BI)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__jRera
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky___4Xsi)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__cn4C
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__z24Se)}
              colors={"yellow" as const}
            >
              <Icon15Icon
                className={classNames(defaultcss.all, sty.svg__jRxHa)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />
      </ValuePropCardsSection>

      <ValuePropCardsSection
        className={classNames(
          "__wab_instance",
          sty.valuePropCardsSection___9ZXha
        )}
        slot={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__unH1
            )}
          >
            {"Hit the ground running."}
          </div>
        }
      >
        <SmallValuePropCard
          actionButton={
            <ButtonLink
              className={classNames("__wab_instance", sty.buttonLink__lyNaW)}
              label={"Browse starter projects"}
            />
          }
          className={classNames("__wab_instance", sty.smallValuePropCard__j2ZY)}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__noKon)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__laGvc
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__caSo5)}
              colors={"red" as const}
            >
              <Icon17Icon
                className={classNames(defaultcss.all, sty.svg__cqWod)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          actionButton={
            <ButtonLink
              className={classNames("__wab_instance", sty.buttonLink__wp0L1)}
              label={"Learn about Figma Import"}
            />
          }
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__hVolp
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__lcgva)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__qIsSk
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__xIsa)}
              colors={"pink" as const}
            >
              <Icon18Icon
                className={classNames(defaultcss.all, sty.svg__ze2Qz)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          actionButton={
            <ButtonLink
              className={classNames("__wab_instance", sty.buttonLink__eomyZ)}
              label={"Learn about Plume"}
              type={["purpleFlat"]}
            />
          }
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__iyFdr
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__bTteb)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__m5OHs
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__txl4T)}
              colors={"purple" as const}
            >
              <Icon19Icon
                className={classNames(defaultcss.all, sty.svg__lrgVv)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />

        <SmallValuePropCard
          actionButton={
            <ButtonLink
              className={classNames("__wab_instance", sty.buttonLink___37GnO)}
              label={"Browse starter projects"}
            />
          }
          className={classNames(
            "__wab_instance",
            sty.smallValuePropCard__lnv53
          )}
          followupLink={
            <Linky
              className={classNames("__wab_instance", sty.linky__tkNxr)}
              link={
                "https://studio.plasmic.app/?starters=general,site-builder" as const
              }
              style={["noPadding"]}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box___3JTg3
                )}
              >
                {"Browse starter projects ->"}
              </div>
            </Linky>
          }
          icon={
            <GraphicIcon
              className={classNames("__wab_instance", sty.graphicIcon__ant0D)}
              colors={"blue" as const}
            >
              <Icon13Icon
                className={classNames(defaultcss.all, sty.svg___8FUIt)}
                role={"img"}
              />
            </GraphicIcon>
          }
        />
      </ValuePropCardsSection>

      <ValuePropSection
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__mYmj)}
            height={95 as const}
            role={"img"}
            src={image6Zk4QpLvJs}
            width={300 as const}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__gApt0)}
        description={
          "Keep full control how your design looks and feels in production directly from Plasmic. What you see is what you get."
        }
        header={"full control"}
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon___6VAf6)}
            colors={"darkGraySolid" as const}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__br6Y)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__wXnHt
            )}
          >
            {"Get autonomy control over your design system in production."}
          </div>
        }
      />

      <ValuePropSection
        backgroundColor={"green" as const}
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__uq3A)}
            height={145 as const}
            role={"img"}
            src={image7RU1GD3ENw}
            width={300 as const}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection___7W6V1)}
        description={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__lyIpO
            )}
          >
            {
              "Feel right at home within the Plasmic studio. As expressive as a design tool, you'll have the freedom to quickly iterate on new designs."
            }
          </div>
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__eqk9N
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon___65RNm)}
            colors={"green" as const}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__ksys)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Powerful editing experience"}
      />

      <ValuePropSection
        backgroundColor={"yellow" as const}
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img___6YbIq)}
            height={92 as const}
            role={"img"}
            src={image2XOaQbmepj8}
            width={300 as const}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection___8LSTc)}
        description={
          "Iterate quickly on new designs and content and get to market faster. Ship faster, learn faster."
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__v7Gz8
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon__s7Vqo)}
            colors={"yellow" as const}
          >
            <Icon10Icon
              className={classNames(defaultcss.all, sty.svg___0E7XF)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Deploy with no coding required"}
      />

      <ValuePropSection
        backgroundColor={"orange" as const}
        backgroundImage={
          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__oLmHv)}
            height={145 as const}
            role={"img"}
            src={image7RU1GD3ENw}
            width={300 as const}
          />
        }
        className={classNames("__wab_instance", sty.valuePropSection__lyaUf)}
        description={
          "No need to change or replace your existing stack. Start with a blurb on a page."
        }
        header={
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__qjD2
            )}
          >
            {"#nocode"}
          </div>
        }
        icon={
          <GraphicIcon
            className={classNames("__wab_instance", sty.graphicIcon___0BOzR)}
          >
            <Icon6Icon
              className={classNames(defaultcss.all, sty.svg__eOPc)}
              role={"img"}
            />
          </GraphicIcon>
        }
        title={"Adopt incrementally in any existing React stack"}
      />

      <Footer
        data-plasmic-name={"footer"}
        data-plasmic-override={overrides.footer}
        className={classNames("__wab_instance", sty.footer)}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "pageHero", "valuePropsListSection", "footer"],
  header: ["header"],
  pageHero: ["pageHero"],
  valuePropsListSection: ["valuePropsListSection"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  pageHero: typeof PageHero;
  valuePropsListSection: typeof ValuePropsListSection;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPageDesignSystems__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPageDesignSystems__VariantsArgs;
    args?: PlasmicPageDesignSystems__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicPageDesignSystems__Fetches;
  } & Omit<PlasmicPageDesignSystems__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPageDesignSystems__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPageDesignSystems__ArgProps,
      internalVariantPropNames: PlasmicPageDesignSystems__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicPageDesignSystems__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPageDesignSystems";
  } else {
    func.displayName = `PlasmicPageDesignSystems.${nodeName}`;
  }
  return func;
}

export const PlasmicPageDesignSystems = Object.assign(
  // Top-level PlasmicPageDesignSystems renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageHero: makeNodeComponent("pageHero"),
    valuePropsListSection: makeNodeComponent("valuePropsListSection"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicPageDesignSystems
    internalVariantProps: PlasmicPageDesignSystems__VariantProps,
    internalArgProps: PlasmicPageDesignSystems__ArgProps
  }
);

export default PlasmicPageDesignSystems;
/* prettier-ignore-end */
